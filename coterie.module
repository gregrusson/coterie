<?php

/**
 * @file
 * Core hooks and bootstrap for Coterie.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\profile\Entity\Profile;
use Drupal\comment\Entity\Comment;
use Drupal\Component\Datetime\Time;
use Drupal\flag\Entity\Flagging;
/**
 * Implements hook_help().
 */
function coterie_help($route_name, RouteMatchInterface $route_match) {
    switch ($route_name) {
        case 'help.page.coterie':
            return '<p>' . t('Provides core functionality for the Coterie social site.') . '</p>';
    }
}

/**
 * Implements hook_preprocess_node().
 */
function coterie_preprocess_node(array &$variables) {
    $node = $variables['node'];

    // Only run this on full nodes or view modes where needed
    if ($node->getOwnerId()) {
        $account = $node->getOwner();

        // Load the user's 'user_profile' profile
        $profiles = \Drupal::entityTypeManager()->getStorage('profile')->loadByProperties([
                                                                                              'uid'  => $account->id(),
                                                                                              'type' => 'user_profile',
                                                                                          ]);

        $first_name    = '';
        $last_name     = '';
        $initials      = '';
        $profile_image = NULL;

        if (!empty($profiles)) {
            $profile = reset($profiles);

            $first_name = $profile->get('field_first_name')->value ?? '';
            $last_name  = $profile->get('field_last_name')->value ?? '';

            // Profile image
            if (!$profile->get('field_profile_image')->isEmpty()) {
                $profile_image = $profile->get('field_profile_image')->view('thumbnail');
            }

            // Profile link
            $variables['profile_url'] = $profile->toUrl()->toString();
        }

        // Fallback to username if both first and last names are missing
        if (empty($first_name) && empty($last_name)) {
            $display_name = $account->getDisplayName();
            $initials     = strtoupper(substr($display_name, 0, 2));
        } else {
            $display_name = trim("$first_name $last_name");
            $initials     = strtoupper(substr($first_name, 0, 1) . substr($last_name, 0, 1));
        }

        // Pass variables to Twig
        $variables['profile_display_name'] = $display_name;
        $variables['profile_initials']     = $initials;
        $variables['profile_image']        = $profile_image;

        /** @var \Drupal\Core\Datetime\DateFormatterInterface $date_formatter */
        $date_formatter = \Drupal::service('date.formatter');

        // Get the created timestamp directly (no strtotime!)
        $timestamp = $node->getCreatedTime();

        // Format as time ago
        $variables['created_time_ago'] = $date_formatter->formatTimeDiffSince($timestamp);
    }

    if ($variables['node']->bundle() === 'coterie_post') {
        $variables['like_count'] = get_likes_count($variables['node']);
    }
}

/**
 * Get number of likes on a node.
 */
function get_likes_count($node) {
    $query = \Drupal::entityTypeManager()->getStorage('flagging')->getQuery();
    $query->accessCheck(TRUE)
          ->condition('flag_id', 'coterie_post_like')
          ->condition('entity_id', $node->id())
          ->condition('entity_type', 'node');

    return $query->count()->execute();
}